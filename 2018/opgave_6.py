"""
Nummering van de vierkantjes is als volgt, diagnonaal van linksonder naar rechtsboven
- bovenste deel gevuld is nummer 1
- onderste deel gevuld is nummer 2
Diagnonaal van linksboven naar rechtsonder:
- bovenste deel gevuld is nummer 3
- onderste deel gevuld is nummer 4
Volledig gevuld is nummer 5 (komt niet voor?)
Volledig leeg is nummer 6 (komt niet voor?)

De rechthoek lijkt te bestaan uit 21 rijen en 55 kolommen
"""
"         1  2  3  4  5  1  2  3  4  5  1  2  3  4  5  1  2  3  4  5  1  2  3  4  5  1  2  3  4  5  1  2  3  4  5  1  2  3  4  5  1  2  3  4  5  1  2  3  4  5  1  2  3  4  5"
"---------------------------------------------------------------------------------------------"
ROW_01 = [1, 2, 3, 1, 2, 3, 2, 1, 3, 2, 2, 1, 3, 1, 3, 2, 2, 1, 1, 3, 1, 1, 3, 1, 3, 2, 1, 4, 2, 1, 1, 3, 1, 4, 2, 1, 1, 3, 1, 3, 2, 1, 3, 2, 1, 2, 3, 1, 2, 2, 3, 1, 1, 3, 1]
ROW_02 = [2, 2, 2, 3, 2, 2, 1, 1, 3, 1, 3, 2, 1, 4, 1, 1, 1, 2, 3, 1, 2, 3, 2, 1, 4, 2, 2, 3, 1, 3, 2, 1, 3, 1, 1, 1, 3, 1, 3, 2, 1, 4, 1, 1, 1, 2, 3, 1, 3, 1, 2, 1, 3, 1, 1]
ROW_03 = [1, 3, 2, 1, 2, 1, 3, 1, 1, 1, 1, 3, 1, 1, 3, 1, 2, 1, 1, 3, 1, 2, 1, 1, 3, 1, 3, 2, 1, 3, 2, 2, 1, 1, 2, 2, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 2, 1, 1, 3, 1, 2, 3, 2, 1]
ROW_04 = [3, 1, 1, 3, 2, 2, 1, 4, 2, 1, 1, 3, 1, 2, 3, 2, 4, 1, 1, 1, 3, 2, 2, 2, 3, 2, 2, 3, 2, 2, 3, 1, 1, 3, 2, 2, 1, 3, 1, 3, 2, 1, 4, 2, 2, 1, 3, 1, 3, 2, 2, 3, 1, 2, 3]
ROW_05 = [2, 1, 2, 3, 2, 1, 2, 3, 1, 3, 1, 2, 1, 1, 3, 1, 1, 3, 1, 2, 2, 2, 3, 2, 1, 2, 3, 1, 3, 1, 2, 1, 4, 2, 1, 1, 3, 1, 2, 3, 2, 1, 4, 1, 2, 3, 2, 1, 3, 2, 1, 1, 3, 1, 3]
ROW_06 = [1, 2, 1, 3, 1, 3, 2, 1, 4, 2, 1, 1, 3, 1, 4, 1, 3, 1, 3, 2, 1, 4, 2, 2, 2, 3, 1, 1, 2, 1, 4, 1, 2, 3, 2, 1, 3, 2, 1, 1, 3, 1, 3, 1, 2, 1, 3, 1, 4, 1, 1, 1, 2, 3, 2]
ROW_07 = [2, 2, 3, 1, 2, 1, 3, 2, 2, 4, 1, 1, 1, 2, 3, 1, 2, 3, 2, 1, 4, 2, 2, 1, 3, 1, 3, 1, 2, 1, 1, 3, 2, 2, 2, 3, 2, 2, 2, 3, 1, 1, 2, 1, 4, 2, 2, 2, 3, 2, 2, 3, 1, 2, 3]
ROW_08 = [1, 2, 1, 3, 2, 2, 3, 1, 3, 2, 1, 3, 2, 2, 1, 1, 2, 2, 4, 1, 2, 2, 3, 1, 2, 3, 2, 1, 3, 2, 4, 1, 2, 2, 3, 1, 2, 3, 2, 4, 2, 1, 1, 3, 1, 4, 1, 3, 1, 3, 2, 1, 4, 1, 2]
ROW_09 = [1, 1, 3, 1, 3, 1, 1, 3, 2, 1, 1, 3, 2, 4, 2, 3, 2, 2, 2, 3, 2, 4, 2, 2, 1, 3, 1, 3, 2, 1, 1, 1, 3, 1, 3, 2, 1, 1, 4, 2, 1, 2, 3, 1, 2, 3, 2, 1, 4, 2, 1, 1, 3, 1, 4]
ROW_10 = [1, 2, 3, 2, 1, 3, 2, 1, 1, 3, 1, 3, 1, 2, 1, 4, 2, 3, 2, 2, 2, 3, 2, 4, 1, 1, 1, 3, 1, 2, 2, 1, 3, 2, 2, 2, 3, 2, 3, 2, 3, 1, 3, 1, 2, 1, 3, 2, 1, 3, 1, 1, 3, 1, 2]
ROW_11 = [2, 2, 4, 1, 2, 1, 1, 3, 1, 3, 1, 1, 3, 2, 1, 1, 3, 1, 3, 2, 1, 3, 2, 2, 1, 1, 2, 2, 4, 2, 1, 2, 1, 3, 2, 2, 2, 3, 2, 1, 3, 2, 1, 2, 1, 3, 1, 2, 1, 1, 3, 1, 1, 2, 3]
ROW_12 = [2, 1, 1, 3, 1, 3, 1, 3, 1, 2, 1, 4, 1, 1, 3, 2, 1, 2, 3, 2, 2, 1, 1, 2, 2, 4, 2, 1, 1, 3, 1, 2, 3, 2, 4, 1, 1, 3, 1, 3, 2, 1, 1, 3, 1, 3, 1, 2, 1, 3, 1, 3, 1, 3, 2]
ROW_13 = [1, 2, 1, 1, 1, 2, 3, 1, 2, 1, 3, 1, 1, 3, 1, 2, 2, 2, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 1, 1, 2, 4, 2, 2, 3, 2, 2, 2, 3, 1, 3, 2, 3, 1, 3, 2, 1, 4, 2, 2, 1, 1, 3, 1, 1]
ROW_14 = [3, 1, 2, 2, 2, 3, 2, 1, 4, 2, 2, 2, 3, 2, 2, 4, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 2, 2, 3, 1, 2, 1, 4, 2, 2, 1, 1, 3, 1, 1, 3, 2, 1, 2, 1, 3, 1, 1, 1, 1, 3, 2, 2, 1, 1]
ROW_15 = [3, 1, 3, 1, 2, 1, 1, 3, 1, 1, 2, 1, 4, 2, 1, 1, 3, 1, 4, 2, 1, 1, 1, 3, 1, 2, 3, 1, 1, 1, 3, 1, 1, 3, 1, 1, 1, 4, 1, 1, 1, 2, 3, 1, 2, 3, 2, 1, 4, 2, 2, 1, 1, 3, 1]
ROW_16 = [1, 3, 1, 2, 2, 2, 3, 2, 1, 4, 2, 2, 2, 3, 1, 1, 1, 2, 3, 1, 3, 1, 2, 1, 3, 2, 3, 1, 1, 2, 3, 1, 1, 3, 2, 2, 1, 3, 1, 2, 3, 2, 1, 3, 2, 2, 1, 4, 2, 3, 1, 4, 2, 1, 2]
ROW_17 = [3, 1, 1, 3, 1, 3, 2, 2, 1, 1, 3, 1, 3, 2, 1, 3, 2, 2, 1, 1, 2, 2, 4, 1, 2, 2, 1, 4, 2, 1, 1, 3, 1, 2, 3, 2, 4, 2, 2, 1, 3, 1, 3, 1, 2, 1, 1, 3, 2, 2, 2, 3, 2, 2, 2]
ROW_18 = [3, 1, 1, 2, 1, 4, 1, 2, 3, 1, 2, 1, 1, 3, 1, 2, 1, 1, 3, 1, 3, 1, 3, 2, 1, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 1, 1, 2, 4, 2, 2, 3, 2, 2, 2, 3, 1, 3, 2, 3, 1, 3, 2, 1, 4]
ROW_19 = [1, 2, 2, 3, 2, 2, 2, 3, 1, 2, 1, 3, 2, 1, 1, 3, 1, 3, 2, 1, 4, 2, 1, 1, 1, 3, 1, 3, 2, 2, 2, 3, 2, 2, 2, 3, 1, 2, 1, 3, 2, 1, 1, 3, 1, 3, 1, 3, 1, 2, 1, 1, 3, 2, 1]
ROW_20 = [1, 4, 2, 2, 2, 3, 1, 2, 2, 1, 4, 2, 1, 1, 3, 1, 4, 1, 1, 1, 2, 3, 1, 2, 1, 3, 1, 1, 2, 3, 2, 1, 2, 1, 3, 1, 1, 1, 1, 3, 2, 3, 1, 3, 2, 1, 4, 2, 1, 1, 3, 1, 1, 3, 1]
ROW_21 = [4, 1, 1, 1, 1, 3, 1, 3, 2, 4, 1, 1, 1, 2, 3, 2, 2, 2, 3, 2, 2, 2, 3, 1, 2, 1, 3, 2, 3, 2, 1, 1, 1, 3, 1, 2, 1, 3, 2, 3, 2, 1, 3, 2, 2, 1, 3, 2, 3, 1, 2, 1, 2, 1, 2]

MATRIX = [ROW_01, ROW_02, ROW_03, ROW_04, ROW_05, ROW_06, ROW_07, ROW_08, ROW_09, ROW_10, ROW_11,
          ROW_12, ROW_13, ROW_14, ROW_15, ROW_16, ROW_17, ROW_18, ROW_19, ROW_20, ROW_21]

"pattern are described as pattern_x_y, where x is the value range along the x axis, y is the range value along the y axis"
pattern_5_3 = {}
pattern_5_1 = {}
pattern_1_3 = {}
pattern_1_7 = {}
pattern_5_7 = {}
pattern_11_1 = {}
pattern_11_3 = {}
pattern_11_7 = {}


def add_pattern(dict, values_list):
    if dict.get(values_list):
        dict[values_list] = dict[values_list] + 1
    else:
        dict[values_list] = 1


def store_pattern(pattern_5_3, x, y):

    for step_y in range(0, len(MATRIX), y):
        for step_x in range(0, len(MATRIX[step_y]), x):
            values = ""
            for idy in range(0, y):
                for idx in range(0, x):
                    x_value = step_x + idx
                    y_value = step_y + idy
                    print(y_value, x_value)
                    values = values + str(MATRIX[y_value][x_value])
            add_pattern(pattern_5_3, values)

store_pattern(pattern_5_1, 5, 1)
store_pattern(pattern_5_3, 5, 3)
store_pattern(pattern_1_3, 1, 3)
store_pattern(pattern_1_7, 1, 7)
store_pattern(pattern_5_7, 5, 7)
store_pattern(pattern_11_1, 11, 1)
store_pattern(pattern_11_3, 11, 3)
store_pattern(pattern_11_7, 11, 7)
print(len(pattern_5_1))
print(len(pattern_5_3))
print(len(pattern_1_3))
print(len(pattern_1_7))
print(len(pattern_5_7))
print(len(pattern_11_1))
print(len(pattern_11_3))
print(len(pattern_11_7))
